/* start - cover */
/* state:innate */
.iconsetpicker-cover {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	opacity: 0.2;
	z-index: 99;
}
/* end - cover */
/* start - main_wrap */
/* state:innate */
.iconsetpicker-wrap {
	position: absolute;
	z-index: 100;
	pointer-events: none;
	margin-bottom: 3px;
}
/* end - main_wrap */

/* start - iconsetpicker_animwrap */
.iconsetpicker-animwrap {
	pointer-events: none;
	margin-bottom: 10px;
}
/* state:react_animation */
.iconsetpicker-initanim-enter {
	opacity: 0;
	margin-bottom: 30px;
}
.iconsetpicker-initanim-enter.iconsetpicker-initanim-enter-active {
	opacity: 1;
	margin-bottom: 0;
	transition: opacity 200ms, margin-bottom 200ms;
}
.iconsetpicker-initanim-leave {
	opacity: 1;
	margin-bottom: 0;
}
.iconsetpicker-initanim-leave.iconsetpicker-initanim-leave-active {
	opacity: 0;
	margin-bottom: 30px;
	transition: opacity 200ms, margin-bottom 200ms;
}
/* end - iconsetpicker-animwrap */

/* start - iconsetpicker_subwrap */
/* state:innate */
.iconsetpicker-subwrap {
	/* must set width on subwrap, as that dictates the width of everything. if dont set width here then if no contents in iconsetpicker-dirlist then it goes to 0 width */
	position: relative;
	width: 200px;
	pointer-events: none;
	padding-bottom: 8px; /* to accomdte for height of arrow */
}
/* end - iconsetpicker_subwrap */

/* start - iconsetpicker_arrow */
/* state:innate */
.iconsetpicker-arrow {
	position: absolute;
	height: 10px;
	width: 10px;
	background-color: #f6f5f6;
	box-shadow: 0 1px 9px 0px rgba(0,0,0,0.3);
	left: 100px;
	bottom: 0px;
	pointer-events: auto;
	transform: rotate(45deg);
	border-radius: 0 0 1px 0;
	border-right: 1px solid #d3d2d3;
	border-bottom: 1px solid #d3d2d3;
}
.iconsetpicker-arrow:before {
	content: '';
	display: block;
	width: 11px;
	height: 20px;
	background-color: #f6f5f6;
	position: absolute;
	left: -10px;
	top: -10px;
	box-shadow: 6px 1px #d3d2d3;
	z-index: -1;
}
.iconsetpicker-arrow:after {
	content: '';
	display: block;
	width: 20px;
	height: 11px;
	background-color: #f6f5f6;
	position: absolute;
	top: -10px;
	left: -10px;
	box-shadow: 1px 6px #d3d2d3;
	z-index: -1;
}
.iconsetpicker-arrow-filler {
	background-color: #f6f5f6;
	display: block;
	width: 19px;
	height: 10px;
	position: relative;
	left: -9px;
}
/* end - iconsetpicker_arrow */

/* start - iconsetpicker_content */
/* state:innate */
.iconsetpicker-content {
	background-color: #f6f5f6;
	box-shadow: 0 1px 9px 0px rgba(0,0,0,0.3);
	pointer-events: auto;
	border-radius: 3px;
	border: 1px solid #d3d2d3;
	overflow: hidden;
	display: flex;
	flex-direction: row;
}
/* end - iconsetpicker_content */

/* start - iconsetpicker_content_content_so_it_is_over_arrow_box */
/* state:innate */
.iconsetpicker-content > * {
	z-index: 1;
}
/* end - iconsetpicker_content_content_so_it_is_over_arrow_box */

/* start - iconsetpicker_nav */
/* state:innate */
.iconsetpicker-nav {
	/* takes the width of the contents, height is 100% as flex */
	background-color: #e4e3e4;
	border-right: 1px solid #d3d2d3;
	padding-top: 15px;
	text-align: left;
}
/* end - iconsetpicker_nav */

/* start - iconsetpicker_nav_row */
/* state:innate */
.iconsetpicker-navrow {
	color: #000;
	padding: 5px 10px 5px 10px;
	cursor: pointer;
	
}
/* state:selected */
.iconsetpicker-navrow.iconsetpicker-selected {
	color: #fff;
	background-color: #0863d9;
}
/* end - iconsetpicker_nav_row */

/* start - iconsetpicker_right */
/* state:innate */
.iconsetpicker-right {
	background-color: steelblue;
	display: flex;
	flex: 1 0 auto;
	flex-direction: column;
}
/* end - iconsetpicker_right */

/* start - iconsetpicker_controls */
/* state:innate */
.iconsetpicker-controls {
	/* takes the height of the contents, width is 100% as flex */
	background-color: skyblue;
}
/* end - iconsetpicker_controls */

/* start - iconsetpicker_rightop */
/* state:innate */
.iconsetpicker-righttop {
    background-color: midnightblue;
    flex: 1 0 auto;
    display: flex;
}
/* end - iconsetpicker_rightop */

/* start - iconsetpicker_dirlist */
/* state:innate */
.iconsetpicker-dirlist {
	/* takes width of contents, or set a width, i prefer to set a width because the contents of this changes, so we should keep constant width */
    background-color: gray;
	width: 50%;
}
/* end - iconsetpicker_dirlist */

/* start - iconsetpicker_imageset */
/* state:innate */
.iconsetpicker-imageset {
    background-color: yellow;
	flex: 1 0 auto;
}
/* end - iconsetpicker_imageset */